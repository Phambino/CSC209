Script started on Thu 22 Mar 2018 09:38:30 PM EDT
phamdav7@dh2020pc18:~/209/w10$ gdb bufserver
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) s[Kbrealk [K[K[Kk setup_server_socket
Breakpoint 1 at 0x400e43: file socket.c, line 33.
(gdb) run bug[Kfserver
Starting program: /student/phamdav7/209/w10/bufserver bufserver

Breakpoint 1, setup_server_socket (self=0x603010, num_queue=5) at socket.c:33
33	int setup_server_socket(struct sockaddr_in *self, int num_queue) {
(gdb) next
34	    int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) next
35	    if (soc < 0) {
(gdb) next
42	    int on = 1;
(gdb) next
43	    int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) next
45	    if (status < 0) {
(gdb) next
51	    if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) next
58	    if (listen(soc, num_queue) < 0) {
(gdb) next
64	    return soc;
(gdb) next
65	}
(gdb) next
main () at bufserver.c:27
27	        int fd = accept_connection(listenfd);
(gdb) next[K[K[K[Knext
Waiting for a new connection...
New connection accepted from 127.0.0.1:50294
28	        if (fd < 0) {
(gdb) next
33	        char buf[BUFSIZE] = {'\0'};
(gdb) next
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) next
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) next
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next[K[K[K[Knext
41		    inbuf += nbytes;
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
60		     	buf[where-1] = '\0';
(gdb) next
61		  	buf[where-2] = '\n';
(gdb) next
63	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time

74		  	memmove(buf,after, inbuf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79		    room = sizeof(buf) - strlen(buf);
(gdb) next
80		    after = buf + inbuf;
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41		    inbuf += nbytes;
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
60		     	buf[where-1] = '\0';
(gdb) next
61		  	buf[where-2] = '\n';
(gdb) next
63	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time

74		  	memmove(buf,after, inbuf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79		    room = sizeof(buf) - strlen(buf);
(gdb) next
80		    after = buf + inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41		    inbuf += nbytes;
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
60		     	buf[where-1] = '\0';
(gdb) next
61		  	buf[where-2] = '\n';
(gdb) next
63	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time

74		  	memmove(buf,after, inbuf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79		    room = sizeof(buf) - strlen(buf);
(gdb) next
80		    after = buf + inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41		    inbuf += nbytes;
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next[K[K[K[Kexit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

	Inferior 1 [process 9720] will be killed.

Quit anyway? (y or n) y
phamdav7@dh2020pc18:~/209/w10$ ei[Kxit
exit

Script done on Thu 22 Mar 2018 09:41:56 PM EDT
